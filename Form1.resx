<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bird.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="gameTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>131, 17</value>
  </metadata>
  <metadata name="saveFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>270, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>